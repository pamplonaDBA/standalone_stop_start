# Pamplona 2020
#  Playbook which stops ASM 
---
- name : check if some oracle database is running
  shell: "ps -ef |grep ora_smon |grep -v grep |grep -v {{item}}"
  environment: 
    PATH: "$PATH:/bin:/usr/bin:/bin:/usr/local/bin:/sbin"
  ignore_errors: yes   
  register: sid_running
  
- name: "Logging  If there are active database "
  blockinfile:
    path: "{{logfile}}"
    marker: ""
    insertafter: EOF
    block: |
       ERROR: some database is running.
       Shutdown process has failed.
       Please contact with oracle dba team
       -- result output ----      
         command :
        {{command_output.cmd}}
        output :
       {{command_output.stdout}}
       error :
       {{command_output.stderr}}
       {{sid_running.stdout}}
       -- result output ----
  when: "{{ sid_running.stdout_lines|length }} > 0"

- name: IF any database is running we exit with fail msg
  fail: 
     msg: "ERROR: some database is running, please contact with oracle dba team"
  when: "{{ sid_running.stdout_lines|length }} > 0"

- name : "stopping {{item}} with srvctl"
  shell: "{{oracle_home}}/bin/srvctl stop asm -f  "
  register: command_output
  environment:
      ORACLE_HOME: "{{oracle_home}}"
      ORACLE_SID:  "{{oracle_sid}}"
      PATH: "$PATH:${{oracle_home}}:/bin:/usr/bin:/bin:/usr/local/bin:/sbin"
      LD_LIBRARY_PATH: "$LD_LIBRARY_PATH:${{oracle_home}}/lib"
  ignore_errors: true 

- name: registering srvctl stop   information 
  blockinfile:
      path: "{{logfile}}"
      marker: ""
      insertafter: EOF
      block: |
           --------------------- stopping {{oracle_sid}}  -----------------------
           command :
           {{command_output.cmd}}
           output :
           {{command_output.stdout}}
           error :
           {{command_output.stderr}}
